trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
remain_cash <- origin_cash + sum(trade$CASHFLOW)
pos <- trade[, .(TIME, SYMBOL, PRICE, QUANTITY, MKT_VALUE = PRICE * QUANTITY)]
nav <- data.table(TIME = t,
MKT_VALUE = sum(pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- copy(pos)
account[["NAV"]] <- copy(nav)
account[["TRADE"]] <- copy(trade)
pos <- copy(account[["POS"]])
nav <- copy(account[["NAV"]])
trade <- copy(account[["TRADE"]])
prev_trade <- tail(trade, 1)
prev_pos <- tail(pos, 1)
prev_nav <- tail(nav, 1)
remain_cash <- prev_nav$CASH
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = -QUANTITY)]
new_trade[, FEE := PRICE * QUANTITY * fee]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
remain_cash <- remain_cash + sum(new_trade$CASHFLOW)
new_pos <- new_trade[, .(TIME, SYMBOL, PRICE, QUANTITY, MKT_VALUE = PRICE * QUANTITY)]
new_nav <- data.table(TIME = t,
MKT_VALUE = sum(new_pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(new_pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- rbind(pos, new_pos)
account[["NAV"]] <- rbind(nav, new_nav)
account[["TRADE"]] <- rbind(trade, new_trade)
account
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = -QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
new_trade
remain_cash <- remain_cash + sum(new_trade$CASHFLOW)
new_trade
remain_cash <- origin_cash + sum(trade$CASHFLOW)
remain_cash <- remain_cash + sum(new_trade$CASHFLOW)
remain_cash
source('D:/allianz/snowball/MC.R', encoding = 'UTF-8')
# 客户pnl
buy_p <- snowball_npv(st = 1, t = 0, index, knock_in_out = 0)
buy_p
snowball_qmt <- qmt / buy_p
snowball_qmt
buy_p <- snowball_npv(st = 1, t = 0, index, knock_in_out = 0)
snowball_qmt <- qmt / buy_p
pnl_customer <- payoff_beta(St, index, t = 0, knock_in_not = 0)$GAIN * qmt
account <- list()
account[["POS"]] <- data.table()
account[["NAV"]] <- data.table()
account[["TRADE"]] <- data.table()
origin_cash <- qmt
fee <- 0.0001
s0 <- copy(index[["S0"]])
knock_in <- copy(index[["knock_in"]])
knock_out <- copy(index[["knock_out"]])
NT <- copy(index[["NT"]])
knock_out_obs <- seq(0, NT, length.out = NT / 252 * 12 + 1)[-1]
knock_in_not <- 0
for (t in c(0, 1 : NT)) {
price <- St[t + 1]
if (t == 0) {
# holding half
trade <- data.table(TIME = t,
SYMBOL = "500ETF",
PRICE = price,
QUANTITY = origin_cash / 2 / price)
trade[, FEE := abs(PRICE * QUANTITY * fee)]
trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
remain_cash <- origin_cash + sum(trade$CASHFLOW)
pos <- trade[, .(TIME, SYMBOL, PRICE, QUANTITY, MKT_VALUE = PRICE * QUANTITY)]
nav <- data.table(TIME = t,
MKT_VALUE = sum(pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- copy(pos)
account[["NAV"]] <- copy(nav)
account[["TRADE"]] <- copy(trade)
} else {
pos <- copy(account[["POS"]])
nav <- copy(account[["NAV"]])
trade <- copy(account[["TRADE"]])
prev_trade <- tail(trade, 1)
prev_pos <- tail(pos, 1)
prev_nav <- tail(nav, 1)
remain_cash <- prev_nav$CASH
if (t %in% knock_out_obs & price > knock_out) {
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = -QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
} else {
if (price < knock_in) {
knock_in_not <- 1
}
delta <- -snowball_delta(price, t, index, knock_in_out)
if (delta < 0) {
delta <- 0
}
snowball_prob <- snowball_npv(price, t, index, knock_in_out)
hedge_amount <- snowball_prob * snowball_qmt * delta
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = hedge_amount / price - QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
GCAMCPUB::log_info("DELTA = ", delta, " TRADE = ", new_trade$QUANTITY)
}
remain_cash <- remain_cash + sum(new_trade$CASHFLOW)
quantity <- prev_pos$QUANTITY + new_trade$QUANTITY
new_pos <- new_trade[, .(TIME, SYMBOL, PRICE, QUANTITY = quantity, MKT_VALUE = PRICE * quantity)]
new_nav <- data.table(TIME = t,
MKT_VALUE = sum(new_pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(new_pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- rbind(pos, new_pos)
account[["NAV"]] <- rbind(nav, new_nav)
account[["TRADE"]] <- rbind(trade, new_trade)
}
GCAMCPUB::log_info(t, " is done.")
}
source('D:/allianz/snowball/MC.R', encoding = 'UTF-8')
account <- list()
account[["POS"]] <- data.table()
account[["NAV"]] <- data.table()
account[["TRADE"]] <- data.table()
origin_cash <- qmt
fee <- 0.0001
s0 <- copy(index[["S0"]])
knock_in <- copy(index[["knock_in"]])
knock_out <- copy(index[["knock_out"]])
NT <- copy(index[["NT"]])
knock_out_obs <- seq(0, NT, length.out = NT / 252 * 12 + 1)[-1]
knock_in_not <- 0
for (t in c(0, 1 : NT)) {
price <- St[t + 1]
if (t == 0) {
# holding half
trade <- data.table(TIME = t,
SYMBOL = "500ETF",
PRICE = price,
QUANTITY = origin_cash / 2 / price)
trade[, FEE := abs(PRICE * QUANTITY * fee)]
trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
remain_cash <- origin_cash + sum(trade$CASHFLOW)
pos <- trade[, .(TIME, SYMBOL, PRICE, QUANTITY, MKT_VALUE = PRICE * QUANTITY)]
nav <- data.table(TIME = t,
MKT_VALUE = sum(pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- copy(pos)
account[["NAV"]] <- copy(nav)
account[["TRADE"]] <- copy(trade)
} else {
pos <- copy(account[["POS"]])
nav <- copy(account[["NAV"]])
trade <- copy(account[["TRADE"]])
prev_trade <- tail(trade, 1)
prev_pos <- tail(pos, 1)
prev_nav <- tail(nav, 1)
remain_cash <- prev_nav$CASH
if (t %in% knock_out_obs & price > knock_out) {
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = -QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
} else {
if (price < knock_in) {
knock_in_not <- 1
}
delta <- -snowball_delta(price, t, index, knock_in_out)
if (delta < 0) {
delta <- 0
}
snowball_prob <- snowball_npv(price, t, index, knock_in_out)
hedge_amount <- snowball_prob * snowball_qmt * delta
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = hedge_amount / price - QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
GCAMCPUB::log_info("DELTA = ", delta, " TRADE = ", new_trade$QUANTITY)
}
remain_cash <- remain_cash + sum(new_trade$CASHFLOW)
quantity <- prev_pos$QUANTITY + new_trade$QUANTITY
new_pos <- new_trade[, .(TIME, SYMBOL, PRICE, QUANTITY = quantity, MKT_VALUE = PRICE * quantity)]
new_nav <- data.table(TIME = t,
MKT_VALUE = sum(new_pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(new_pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- rbind(pos, new_pos)
account[["NAV"]] <- rbind(nav, new_nav)
account[["TRADE"]] <- rbind(trade, new_trade)
}
GCAMCPUB::log_info(t, " is done.")
}
account <- list()
account[["POS"]] <- data.table()
account[["NAV"]] <- data.table()
account[["TRADE"]] <- data.table()
origin_cash <- qmt
fee <- 0.0001
s0 <- copy(index[["S0"]])
knock_in <- copy(index[["knock_in"]])
knock_out <- copy(index[["knock_out"]])
NT <- copy(index[["NT"]])
knock_out_obs <- seq(0, NT, length.out = NT / 252 * 12 + 1)[-1]
knock_in_not <- 0
for (t in c(0, 1 : NT)) {
price <- St[t + 1]
if (t == 0) {
# holding half
trade <- data.table(TIME = t,
SYMBOL = "500ETF",
PRICE = price,
QUANTITY = origin_cash / 2 / price)
trade[, FEE := abs(PRICE * QUANTITY * fee)]
trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
remain_cash <- origin_cash + sum(trade$CASHFLOW)
pos <- trade[, .(TIME, SYMBOL, PRICE, QUANTITY, MKT_VALUE = PRICE * QUANTITY)]
nav <- data.table(TIME = t,
MKT_VALUE = sum(pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- copy(pos)
account[["NAV"]] <- copy(nav)
account[["TRADE"]] <- copy(trade)
} else {
pos <- copy(account[["POS"]])
nav <- copy(account[["NAV"]])
trade <- copy(account[["TRADE"]])
prev_trade <- tail(trade, 1)
prev_pos <- tail(pos, 1)
prev_nav <- tail(nav, 1)
remain_cash <- prev_nav$CASH
if (t %in% knock_out_obs & price > knock_out) {
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = -QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
} else {
if (price < knock_in) {
knock_in_not <- 1
}
delta <- -snowball_delta(price, t, index, knock_in_out)
if (delta < 0) {
delta <- 0
}
snowball_prob <- snowball_npv(price, t, index, knock_in_out)
hedge_amount <- snowball_prob * snowball_qmt * delta
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = hedge_amount / price - QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
GCAMCPUB::log_info("DELTA = ", delta, " TRADE = ", new_trade$QUANTITY, " HEDGE = ", hedge_amount)
}
remain_cash <- remain_cash + sum(new_trade$CASHFLOW)
quantity <- prev_pos$QUANTITY + new_trade$QUANTITY
new_pos <- new_trade[, .(TIME, SYMBOL, PRICE, QUANTITY = quantity, MKT_VALUE = PRICE * quantity)]
new_nav <- data.table(TIME = t,
MKT_VALUE = sum(new_pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(new_pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- rbind(pos, new_pos)
account[["NAV"]] <- rbind(nav, new_nav)
account[["TRADE"]] <- rbind(trade, new_trade)
}
GCAMCPUB::log_info(t, " is done.")
}
account <- list()
account[["POS"]] <- data.table()
account[["NAV"]] <- data.table()
account[["TRADE"]] <- data.table()
origin_cash <- qmt
fee <- 0.0001
s0 <- copy(index[["S0"]])
knock_in <- copy(index[["knock_in"]])
knock_out <- copy(index[["knock_out"]])
NT <- copy(index[["NT"]])
knock_out_obs <- seq(0, NT, length.out = NT / 252 * 12 + 1)[-1]
knock_in_not <- 0
for (t in c(0, 1 : NT)) {
price <- St[t + 1]
if (t == 0) {
# holding half
trade <- data.table(TIME = t,
SYMBOL = "500ETF",
PRICE = price,
QUANTITY = origin_cash / 2 / price)
trade[, FEE := abs(PRICE * QUANTITY * fee)]
trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
remain_cash <- origin_cash + sum(trade$CASHFLOW)
pos <- trade[, .(TIME, SYMBOL, PRICE, QUANTITY, MKT_VALUE = PRICE * QUANTITY)]
nav <- data.table(TIME = t,
MKT_VALUE = sum(pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- copy(pos)
account[["NAV"]] <- copy(nav)
account[["TRADE"]] <- copy(trade)
} else {
pos <- copy(account[["POS"]])
nav <- copy(account[["NAV"]])
trade <- copy(account[["TRADE"]])
prev_trade <- tail(trade, 1)
prev_pos <- tail(pos, 1)
prev_nav <- tail(nav, 1)
remain_cash <- prev_nav$CASH
if (t %in% knock_out_obs & price > knock_out) {
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = -QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
} else {
if (price < knock_in) {
knock_in_not <- 1
}
delta <- -snowball_delta(price, t, index, knock_in_out)
if (delta < 0) {
delta <- 0
}
snowball_prob <- snowball_npv(price, t, index, knock_in_out)
hedge_amount <- snowball_prob * snowball_qmt * delta
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = hedge_amount / price - QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
GCAMCPUB::log_info("DELTA = ", delta, "PRICE = ", price, " TRADE = ", new_trade$QUANTITY, " HEDGE = ", hedge_amount)
}
remain_cash <- remain_cash + sum(new_trade$CASHFLOW)
quantity <- prev_pos$QUANTITY + new_trade$QUANTITY
new_pos <- new_trade[, .(TIME, SYMBOL, PRICE, QUANTITY = quantity, MKT_VALUE = PRICE * quantity)]
new_nav <- data.table(TIME = t,
MKT_VALUE = sum(new_pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(new_pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- rbind(pos, new_pos)
account[["NAV"]] <- rbind(nav, new_nav)
account[["TRADE"]] <- rbind(trade, new_trade)
}
GCAMCPUB::log_info(t, " is done.")
}
source('D:/allianz/snowball/trading.R', encoding = 'UTF-8')
plot(St)
pnl_customer
account <- list()
account[["POS"]] <- data.table()
account[["NAV"]] <- data.table()
account[["TRADE"]] <- data.table()
origin_cash <- qmt
fee <- 0.0001
s0 <- copy(index[["S0"]])
knock_in <- copy(index[["knock_in"]])
knock_out <- copy(index[["knock_out"]])
NT <- copy(index[["NT"]])
knock_out_obs <- seq(0, NT, length.out = NT / 252 * 12 + 1)[-1]
knock_in_not <- 0
for (t in c(0, 1 : NT)) {
price <- St[t + 1]
if (t == 0) {
# holding half
trade <- data.table(TIME = t,
SYMBOL = "500ETF",
PRICE = price,
QUANTITY = origin_cash / 2 / price)
trade[, FEE := abs(PRICE * QUANTITY * fee)]
trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
remain_cash <- origin_cash + sum(trade$CASHFLOW)
pos <- trade[, .(TIME, SYMBOL, PRICE, QUANTITY, MKT_VALUE = PRICE * QUANTITY)]
nav <- data.table(TIME = t,
MKT_VALUE = sum(pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- copy(pos)
account[["NAV"]] <- copy(nav)
account[["TRADE"]] <- copy(trade)
} else {
pos <- copy(account[["POS"]])
nav <- copy(account[["NAV"]])
trade <- copy(account[["TRADE"]])
prev_trade <- tail(trade, 1)
prev_pos <- tail(pos, 1)
prev_nav <- tail(nav, 1)
remain_cash <- prev_nav$CASH
if (t %in% knock_out_obs & price > knock_out) {
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = -QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
} else {
if (price < knock_in) {
knock_in_not <- 1
}
delta <- -snowball_delta(price, t, index, knock_in_out)
if (delta < 0) {
delta <- 0
}
snowball_prob <- snowball_npv(price, t, index, knock_in_out)
hedge_amount <- snowball_prob * snowball_qmt * delta
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = hedge_amount / price - QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
GCAMCPUB::log_info("DELTA = ", delta, " PRICE = ", price, " TRADE = ", new_trade$QUANTITY, " HEDGE = ", hedge_amount)
}
remain_cash <- remain_cash + sum(new_trade$CASHFLOW)
quantity <- prev_pos$QUANTITY + new_trade$QUANTITY
new_pos <- new_trade[, .(TIME, SYMBOL, PRICE, QUANTITY = quantity, MKT_VALUE = PRICE * quantity)]
new_nav <- data.table(TIME = t,
MKT_VALUE = sum(new_pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(new_pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- rbind(pos, new_pos)
account[["NAV"]] <- rbind(nav, new_nav)
account[["TRADE"]] <- rbind(trade, new_trade)
}
GCAMCPUB::log_info(t, " is done.")
}
library(data.table)
source('D:/allianz/snowball/MC.R', encoding = 'UTF-8')
# param
index <- list(S0 = 1,
sigma = 0.13,
knock_in = 0.85,
knock_out = 1.03,
r = 0.03,
pay = 0.2,
NT = 252) #parameters needed
qmt <- 100
# 构造价格
epsilon <- rnorm(index$NT)
St <- calculate_s_t(index, st = 1, t = 0, epsilon)
plot(St)
buy_p <- snowball_npv(st = 1, t = 0, index, knock_in_out = 0)
snowball_qmt <- qmt / buy_p
pnl_customer <- payoff_beta(St, index, t = 0, knock_in_not = 0)$GAIN * qmt
account <- list()
account[["POS"]] <- data.table()
account[["NAV"]] <- data.table()
account[["TRADE"]] <- data.table()
origin_cash <- qmt
fee <- 0.0001
s0 <- copy(index[["S0"]])
knock_in <- copy(index[["knock_in"]])
knock_out <- copy(index[["knock_out"]])
NT <- copy(index[["NT"]])
knock_out_obs <- seq(0, NT, length.out = NT / 252 * 12 + 1)[-1]
knock_in_not <- 0
for (t in c(0, 1 : NT)) {
price <- St[t + 1]
if (t == 0) {
# holding half
trade <- data.table(TIME = t,
SYMBOL = "500ETF",
PRICE = price,
QUANTITY = origin_cash / 2 / price)
trade[, FEE := abs(PRICE * QUANTITY * fee)]
trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
remain_cash <- origin_cash + sum(trade$CASHFLOW)
pos <- trade[, .(TIME, SYMBOL, PRICE, QUANTITY, MKT_VALUE = PRICE * QUANTITY)]
nav <- data.table(TIME = t,
MKT_VALUE = sum(pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- copy(pos)
account[["NAV"]] <- copy(nav)
account[["TRADE"]] <- copy(trade)
} else {
pos <- copy(account[["POS"]])
nav <- copy(account[["NAV"]])
trade <- copy(account[["TRADE"]])
prev_trade <- tail(trade, 1)
prev_pos <- tail(pos, 1)
prev_nav <- tail(nav, 1)
remain_cash <- prev_nav$CASH
if (t %in% knock_out_obs & price > knock_out) {
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = -QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
} else {
if (price < knock_in) {
knock_in_not <- 1
}
delta <- -snowball_delta(price, t, index, knock_in_out)
if (delta < 0) {
delta <- 0
}
snowball_prob <- snowball_npv(price, t, index, knock_in_out)
hedge_amount <- snowball_prob * snowball_qmt * delta
new_trade <- prev_pos[, .(TIME = t, SYMBOL, PRICE = price, QUANTITY = hedge_amount / price - QUANTITY)]
new_trade[, FEE := abs(PRICE * QUANTITY * fee)]
new_trade[, CASHFLOW := -PRICE * QUANTITY - FEE]
GCAMCPUB::log_info("DELTA = ", delta, " PRICE = ", price, " TRADE = ", new_trade$QUANTITY, " HEDGE = ", hedge_amount)
}
remain_cash <- remain_cash + sum(new_trade$CASHFLOW)
quantity <- prev_pos$QUANTITY + new_trade$QUANTITY
new_pos <- new_trade[, .(TIME, SYMBOL, PRICE, QUANTITY = quantity, MKT_VALUE = PRICE * quantity)]
new_nav <- data.table(TIME = t,
MKT_VALUE = sum(new_pos$MKT_VALUE),
CASH = remain_cash,
NAV = sum(new_pos$MKT_VALUE) + remain_cash)
account[["POS"]] <- rbind(pos, new_pos)
account[["NAV"]] <- rbind(nav, new_nav)
account[["TRADE"]] <- rbind(trade, new_trade)
}
GCAMCPUB::log_info(t, " is done.")
}
z <- snowball_delta(1, 0, index, knock_in_out=0)
z
z <- snowball_delta(0.99, 0, index, knock_in_out=0);z
z <- snowball_delta(0.98, 0, index, knock_in_out=0);z
z <- snowball_delta(0.95, 0, index, knock_in_out=0);z
z <- snowball_delta(0.97, 0, index, knock_in_out=0);z
z <- snowball_delta(0.90, 0, index, knock_in_out=0);z
z <- snowball_delta(0.85, 0, index, knock_in_out=0);z
z <- snowball_delta(0.80, 0, index, knock_in_out=0);z
z <- snowball_delta(0.75, 0, index, knock_in_out=0);z
z <- snowball_delta(0.70, 0, index, knock_in_out=0);z
z <- snowball_delta(1.02, 0, index, knock_in_out=0);z
z <- snowball_delta(1.05, 0, index, knock_in_out=0);z
z <- snowball_delta(1.1, 0, index, knock_in_out=0);z
z <- snowball_delta(1.2, 0, index, knock_in_out=0);z
z <- snowball_delta(1.3, 0, index, knock_in_out=0);z
